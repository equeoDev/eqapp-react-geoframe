[{"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/index.js":"1","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/reportWebVitals.js":"2","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/App.js":"3","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Updater.js":"4","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Services/MessagingService/index.js":"5","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/TimeoutHelper.js":"6","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/LiveTicker/LiveTickerList.js":"7","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/LiveTicker/LiveTickerMessage.js":"8","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/VideoHelper.js":"9","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/UrlHelper.js":"10","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Video/Video.js":"11","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/StringHelper.js":"12","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/LiveTicker/LiveTicker.js":"13"},{"size":500,"mtime":1607688478441,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607688478432,"results":"16","hashOfConfig":"15"},{"size":245,"mtime":1631631838477,"results":"17","hashOfConfig":"15"},{"size":1201,"mtime":1706790423957,"results":"18","hashOfConfig":"15"},{"size":1664,"mtime":1706782950466,"results":"19","hashOfConfig":"15"},{"size":595,"mtime":1631643518830,"results":"20","hashOfConfig":"15"},{"size":946,"mtime":1706786952539,"results":"21","hashOfConfig":"15"},{"size":4545,"mtime":1706787882339,"results":"22","hashOfConfig":"15"},{"size":1097,"mtime":1706777151900,"results":"23","hashOfConfig":"15"},{"size":1380,"mtime":1700578213981,"results":"24","hashOfConfig":"15"},{"size":1273,"mtime":1706784055793,"results":"25","hashOfConfig":"15"},{"size":3052,"mtime":1706784311776,"results":"26","hashOfConfig":"15"},{"size":3303,"mtime":1706788067570,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1su6h35",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/index.js",[],["64","65"],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/reportWebVitals.js",[],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/App.js",["66"],"import React from 'react'\nimport './App.css'\nimport Updater from './Updater'\nimport KesiTools from 'kesi-iframe-messaging/kesi-tools'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Updater />\n    </div>\n  )\n}\n\nexport default App\n","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Updater.js",["67","68","69"],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Services/MessagingService/index.js",["70"],"/**\n * Created by falknisius on 30.05.17.\n *\n *\n *\n * subscribeChannel:\n *      channelName, StoreAction\n *      handle connection in background\n *      if receive call storeAction\n *\n * Queue Consumer\n *      connect:\n *          encapsulate Ably connect\n *          get instanceId\n *          call auth server with applicationInstanceId for Ably token\n *\n *      register for event come online\n */\n\nimport axios from 'axios'\n// import RegisterInstance from '../RegisterInstance'\n\nconst MESSAGE_HISTORY_URL = 'rest/v1/tickerMessages'\nconst LEDGER_HOST = 'https://ergopro-ledger.equeo.de'\n\nclass MessageService {\n\n  /**\n   * initialize ably connection\n   * initialize message handler registry\n   */\n  constructor() {\n  }\n\n  async getMessageHistory(channel, token) {\n    try {\n      const channelName = channel.split(':').pop()\n      // const token = await RegisterInstance.getAccessToken('logAggregate:read')\n      const response = await axios.get(`${LEDGER_HOST}/${MESSAGE_HISTORY_URL}/${channelName}`, {headers: {Authorization: 'Bearer ' + token}})\n\n      if (response.status === 200) {\n        const messages = []\n        response.data.forEach(obj => {\n          messages.push(obj.message)\n        })\n\n        messages.sort((element1, element2) => {\n          if (element1.dateCreated > element2.dateCreated) {\n            return 1\n          }\n          if (element1.dateCreated < element2.dateCreated) {\n            return -1\n          }\n          return 0\n        })\n\n        return messages\n      } else {\n        return []\n      }\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nlet messageService = new MessageService()\n\nexport default messageService\n",["71","72"],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/TimeoutHelper.js",[],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/LiveTicker/LiveTickerList.js",[],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/LiveTicker/LiveTickerMessage.js",["73"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Card, CircularProgress} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport moment from 'moment'\nimport {getVideoUrl} from \"../Helper/VideoHelper\";\nimport Video from \"../Video/Video\";\nimport UrlHelper from \"../Helper/UrlHelper\";\n\nclass LiveTickerMessage extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      quotedMessage: null,\n      optimalVideoSrc: null,\n      videoError: null,\n      posterImage: null\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.videoId) {\n      this.getVideoSrc()\n    }\n  }\n\n  _correctProtocol (url) {\n    const protocol = window.location.protocol.toLowerCase()\n    if (protocol === 'file:' || protocol === 'https:' || protocol === 'http:') {\n      const parts = UrlHelper.parseURL(url)\n      const protocolToUse = protocol === 'file:' ? 'https:' : protocol\n      const host = (protocol === 'https:' && parts.host.match(/:80$/))\n        ? parts.host.substring(0, parts.host.length - 3)\n        : ((protocol === 'http:' && parts.host.match(/:443$/))\n          ? parts.host.substring(0, parts.host.length - 4)\n          : parts.host)\n      return protocolToUse + '//' + host + (parts.pathname.substring(0, 1) !== '/' ? '/' : '') + parts.pathname + parts.search + parts.hash\n    }\n    return url\n  }\n\n  getVideoSrc = async () => {\n    this.setState({videoError: null})\n    try {\n      const videoData = await getVideoUrl(this.props.videoId)\n      const finalUrl = this._correctProtocol(videoData.src)\n\n      console.log('finalUrl', finalUrl, videoData.src)\n\n      this.setState({optimalVideoSrc: finalUrl, posterImage: videoData.poster})\n    }\n    catch (error) {\n      this.setState({videoError: error.message})\n    }\n  }\n\n  render () {\n    const message = this.props.message\n    return (\n      <Card className={'outer'} key={`entry_${message.id}`} id={message.id} style={this.props.isHidden ? {padding: 0, margin: 0, maxHeight: 0} : {padding: '7px', margin: '10px 0', maxHeight: '9999px'}}>\n        <CardContent style={{textAlign: 'left', float: 'left', width: '18%', display: 'inline-block', verticalAlign: 'top', padding: 0}}>\n          <Typography\n            className={'authorMobile'}\n            color='textSecondary'\n            gutterBottom\n          >\n            {this.props.author}\n          </Typography>\n          <Typography\n            className={'dateMobile'}\n            color='textSecondary'\n            gutterBottom\n          >\n            {moment(this.props.dateCreated).format('DD.MM.YYYY HH:mm')}\n          </Typography>\n        </CardContent>\n        <CardContent style={{float:'right', width: '78%', display: 'inline-block', padding: 0, paddingLeft: 10, verticalAlign: 'top'}}>\n          {this.props.videoId && this.state.optimalVideoSrc\n            ? <Video\n              videoId={this.props.videoId}\n              poster={this.state.posterImage}\n              playsInline={true}\n              style={{width: '100%', height: 'auto', display: 'block', position: 'relative', paddingBottom: '8px'}}\n              controls\n              src={this.state.optimalVideoSrc} />\n            : null\n          }\n          {this.props.videoId && !this.state.optimalVideoSrc && !this.state.videoError ? <><CircularProgress /><div style={{paddingLeft: '10px'}}>Video wird geladen</div></> : null}\n          {this.props.videoId && this.state.videoError ? <><div style={{color: 'red'}}>{`Video konnte nicht geladen werden - Fehler: ${this.state.videoError}`}</div><div onClick={this.getVideoSrc}>Erneut versuchen</div></> : null}\n          {this.props.imageLink ? <img style={{width: '100%', height: 'auto', display: 'block', position: 'relative', paddingBottom: '8px'}} src={this.props.imageLink} /> : null}\n          <Typography\n            className={'messageMobile'}\n            color='textSecondary'\n            gutterBottom\n            dangerouslySetInnerHTML={{__html: message}}\n          />\n        </CardContent>\n      </Card>\n    )\n  }\n\n}\n\nLiveTickerMessage.propTypes = {\n  id: PropTypes.string,\n  userId: PropTypes.string,\n  key: PropTypes.string,\n  message: PropTypes.string,\n  dateCreated: PropTypes.string,\n  dateEdited: PropTypes.string,\n  isLatest: PropTypes.bool,\n  author: PropTypes.string,\n  imageLink: PropTypes.string,\n  videoId: PropTypes.string,\n  isHidden: PropTypes.bool\n}\n\nLiveTickerMessage.defaultProps = {\n  isLatest: false,\n  isExpert: false\n}\n\nexport default LiveTickerMessage\n","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/VideoHelper.js",[],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/UrlHelper.js",["74"],"export default class {\n  static getUrlParams (path) {\n    if (!path && (!window || !window.location || !window.location.search)) {\n      return {}\n    }\n\n    const search = path || window.location.search\n    const hashes = search.slice(search.indexOf('?') + 1).split('&')\n    const params = {}\n    hashes.map(hash => {\n      const [key, val] = hash.split('=')\n      params[key] = decodeURIComponent(val)\n      return params\n    })\n\n    return params\n  }\n\n  static getBasePath () {\n    if (!window || !window.location || !window.location.hash ) {\n      return ''\n    }\n\n    const urlHash = window.location.hash\n    if (urlHash) {\n      const path = urlHash.substr(1, urlHash.length)\n      if (path) {\n        return path\n      }\n    }\n\n    return ''\n  }\n\n  static parseURL (url) {\n    const parser = document.createElement('a')\n    const searchObject = {}\n    parser.href = url\n    const queries = (parser.search) ? parser.search.replace(/^\\?/, '').split('&') : []\n    for (let i = 0; i < queries.length; i++) {\n      const split = queries[i].split('=')\n      searchObject[split[0]] = decodeURIComponent(split[1])\n    }\n    return {\n      protocol: parser.protocol,\n      host: parser.host,\n      hostname: parser.hostname,\n      port: parser.port,\n      pathname: parser.pathname,\n      search: parser.search,\n      searchObject: searchObject,\n      hash: parser.hash\n    }\n  }\n}\n","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Video/Video.js",["75"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CACHE = {}\n\nclass Video extends React.Component {\n\n  constructor (props) {\n    super(props)\n  }\n\n  componentWillUnmount () {\n    // this.unloadB64()\n  }\n\n  getId () {\n    return `${this.props.src}_video`\n  }\n\n  unloadB64 = () => {\n    if (CACHE[this.props.poster]) {\n      delete CACHE[this.props.poster]\n    }\n  }\n\n  onContextMenu = (event) => {\n    event.preventDefault()\n    console.log('context menu!')\n    return false\n  }\n\n  render () {\n    const {videoId, poster, ...props} = this.props\n\n    if (poster) {\n      props['poster'] = CACHE[poster] || poster\n      // ie shows poster only if no video is available, all other browsers show poster without any condition\n    }\n\n    console.log('video.js', this.props)\n\n    return (\n      <video\n        id={this.props.videoId}\n        {...props}\n        crossOrigin={'anonymous'}\n        onContextMenu={this.onContextMenu}\n        playsInline={true}\n      >\n        {this.props.subtitles\n          ? <track label=\"Untertitel\" kind=\"subtitles\" srcLang=\"de\" src={this.props.subtitles} default={true}/>\n          : null\n        }\n      </video>\n    )\n  }\n\n}\n\nVideo.propTypes = {\n  videoId: PropTypes.string,\n  poster: PropTypes.string\n}\n\nexport default Video\n",["76","77"],"/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/Helper/StringHelper.js",["78","79"],"export default class StringHelper {\n  static removeLeadingAndTrailingBrAndPInHtml = (htmlString) => {\n    const regex = /^(<\\/?\\s*(br|p)[^>]*\\/?>)+|(<\\/?\\s*(br|p)[^>]*\\/?>)+$/g\n    return htmlString.replace(regex, '')\n  }\n\n  static removeAllPAndReplaceWithBr = (htmlString) => {\n    const regex = /<p[^>]*>/g\n    let stringToReturn = htmlString.replace(regex, '')\n    const regex2 = /<\\/p[^>]*>/g\n    let stringToReturn2 = stringToReturn.replace(regex2, '<br /><br />')\n    const regex3 = /<br \\/><br \\/>$/g\n    return stringToReturn2.replace(regex3, '')\n  }\n\n  static isEmailAdress = (address) => {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(address.toLowerCase());\n  }\n\n  static getMathMlContent = (htmlString) => {\n    if (!htmlString) {\n      console.log('got no html string', htmlString)\n      return null\n    }\n    const regex = /<math.*?>.*?<\\/math>/g\n    return htmlString.match(regex)\n  }\n\n  static createUuid = () => {\n    let d = new Date().getTime()\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n      d += performance.now() // use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = (d + (Math.random() * 16)) % 16 | 0            // eslint-disable-line\n      d = Math.floor(d / 16)                                   // eslint-disable-line\n      return (c === 'x' ? r : ((r & 0x3) | 0x8)).toString(16)  // eslint-disable-line\n    })\n  }\n\n  static getDeviceUuidVisiblePart = (deviceUuid) => {\n    if (deviceUuid.split) {\n      const parts = deviceUuid.split('-')\n      if (parts.length > 0) {\n        return parts[parts.length - 1]\n      }\n    }\n    return null\n  }\n\n  static createShortId = (length = 5) => {                      // eslint-disable-line no-magic-numbers\n    return Math.random().toString(36).substring(2, length + 2)     // eslint-disable-line no-magic-numbers\n  }\n\n  static getDjb2HashCode = (str) => {\n    let hash = 5381\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i)\n      hash = ((hash << 5) + hash) + char // hash = hash * 33 + c\n    }\n    return hash\n  }\n\n  static getHumanReadableTimeString(seconds){\n    const mm = Math.floor(seconds / 60)\n    const ss = Math.floor(seconds - mm * 60)\n    let res\n    if(ss === 0) {\n      res = \"\" + mm + \":\" + ss + \"0\"\n    }\n    else if(ss < 10) {\n      res = \"\" + mm + \":0\" + ss\n    }\n    else {\n      res = \"\" + mm + \":\" + ss\n    }\n    return res\n  }\n\n  /**\n   * Returns the given text with all &shy; replaced by equivalent UTF-8 symbol \\u00AD\n   */\n  static decodeHtmlEntities (text) {\n    if (!text) {\n      return null\n    }\n    return text\n      .replace(/&shy;/g, '\\u00AD')              // shy\n      .replace(/&nbsp;/g, '\\u00A0')             // non breaking space\n      .replace(/&#?[a-zA-Z0-9]{2,8};/g, '') // hide all other symbols to be backward compatible in future\n  }\n}\n","/Users/sebastiangraf/Projekte/eqapp-react-geoframe/src/LiveTicker/LiveTicker.js",["80","81"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport LiveTickerMessage from './LiveTickerMessage'\nimport LiveTickerList from './LiveTickerList'\nimport moment from 'moment'\n\nconst MESSAGE_STATES = {\n  REJECTED: 'rejected',\n  ACCEPTED: 'accepted',\n  NOT_CHECKED: 'notChecked'\n}\n\nfunction removeDuplicatesFromHistory(history) {\n  return history.filter(message => {\n    const sameMessages = history.filter(m => m.id === message.id)\n    // check if there are any newer messages\n    // if yes, return false\n    // if not return message\n    if (sameMessages.length > 1 && sameMessages.some(m => m.dateEdited !== null) && message.dateEdited === null) {\n      return false\n    }\n    if (sameMessages.length > 1 && sameMessages.some(m => (m.dateCreated && moment(m.dateCreated).isAfter(moment(message.dateCreated))))) {\n      return false\n    }\n    if (sameMessages.length > 1 && sameMessages.some(m => (m.dateEdited && moment(m.dateEdited).isAfter(moment(message.dateEdited))))) {\n      return false\n    }\n    return message\n  })\n}\n\nfunction removeRejectedFromHistory(history) {\n  return history.filter(message => message.state !== MESSAGE_STATES.REJECTED)\n}\n\nclass LiveTicker extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      userId: null,\n      userName: null,\n      isExpert: false,\n      presenceList: null,\n      quotedMessage: null,\n      chatActive: true,\n      chatFinished: false,\n      statusInitialized: false,\n      ...this.state\n    }\n\n    this.channel = null  // will be initialized in connectToChatChannel\n  }\n\n  componentDidMount = () => {\n\n  }\n\n  render () {\n    const channelId = this.props.ablyChannel\n\n    let messages = []\n    const messageObjects = this.props.messages\n\n    if (!messageObjects) return null\n\n    const keys = Object.keys(messageObjects)\n    if (messageObjects && messageObjects[keys[0]]) {\n      messages = removeDuplicatesFromHistory(messageObjects[keys[0]])\n      messages = removeRejectedFromHistory(messages)\n    }\n\n    messages.sort((content1, content2) => {\n      if (content1.dateCreated && content2.dateCreated) {\n        if (content1.dateCreated < content2.dateCreated) {\n          return 1\n        }\n        if (content1.dateCreated > content2.dateCreated) {\n          return -1\n        }\n        return 0\n      }\n    })\n\n    const messagesToRender = messages.map((message, index) => {\n      if (index === 0) {\n        console.log('last message to render', message)\n      }\n\n      return (\n        <LiveTickerMessage\n          key={message.id}\n          id={message.id}\n          userId={message.author}\n          message={message.html}\n          imageLink={message.imageLink}\n          videoId={message.videoId}\n          dateCreated={message.dateCreated}\n          dateEdited={message.dateEdited}\n          author={message.author}\n          isLatest={index === messages.length - 1}\n          isHidden={message.isHidden || false}\n        />\n      )\n    })\n\n    return (\n      <LiveTickerList>\n        {messagesToRender.length > 0 ? messagesToRender : 'Keine Nachrichten vorhanden'}\n      </LiveTickerList>\n    )\n  }\n\n}\n\nLiveTicker.propTypes = {\n  ablyChannel: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  adminActive: PropTypes.bool,\n  messages: PropTypes.array\n}\n\nexport default LiveTicker\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":17},{"ruleId":"86","severity":1,"message":"90","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":22},{"ruleId":"86","severity":1,"message":"91","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":25},{"ruleId":"86","severity":1,"message":"92","line":32,"column":13,"nodeType":"88","messageId":"89","endLine":32,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":32,"column":3,"nodeType":"95","messageId":"96","endLine":33,"endColumn":4},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":93,"column":35,"nodeType":"101","endLine":93,"endColumn":171},{"ruleId":"102","severity":1,"message":"103","line":1,"column":1,"nodeType":"104","endLine":55,"endColumn":2},{"ruleId":"93","severity":1,"message":"94","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":4},{"ruleId":"82","replacedBy":"105"},{"ruleId":"84","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":17,"column":24,"nodeType":"109","messageId":"110","endLine":17,"endColumn":25,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":17,"column":49,"nodeType":"109","messageId":"110","endLine":17,"endColumn":50,"suggestions":"112"},{"ruleId":"86","severity":1,"message":"113","line":62,"column":11,"nodeType":"88","messageId":"89","endLine":62,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":75,"column":40,"nodeType":"116","messageId":"117","endLine":75,"endColumn":42},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'KesiTools' is defined but never used.","Identifier","unusedVar","'LiveTickerList' is defined but never used.","'LiveTickerMessage' is defined but never used.","'channelName' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["118"],["119"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration",["118"],["119"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["120","121"],["122","123"],"'channelId' is assigned a value but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"messageId":"124","fix":"125","desc":"126"},{"messageId":"127","fix":"128","desc":"129"},{"messageId":"124","fix":"130","desc":"126"},{"messageId":"127","fix":"131","desc":"129"},"removeEscape",{"range":"132","text":"133"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"134","text":"135"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"136","text":"133"},{"range":"137","text":"135"},[623,624],"",[623,623],"\\",[648,649],[648,648]]